// 4文字以下・重複文字なしの単語リスト（各レベル20個）
export const level1Words = [
  'りんご', 'みかん', 'すいか', 'さくら', 'たけのこ', 'いちご', 'かき', 'なし', 'ぶどう', 'さる',
  'うさぎ', 'きつね', 'くま', 'ぞう', 'かめ', 'いぬ', 'ねこ', 'しか', 'ひよこ', 'とり',
];

export const level2Words = [
  'かに', 'たい', 'ふね', 'やま', 'かわ', 'うみ', 'はな', 'くも', 'ほし', 'つき',
  'ゆき', 'かぜ', 'あめ', 'そら', 'たいこ', 'つる', 'かさ', 'かど', 'いし', 'たに',
];

export const level3Words = [
  'かど', 'いと', 'はし', 'かべ', 'つり', 'いけ', 'たけ', 'いわ', 'きり', 'たま',
  'かど', 'いし', 'たに', 'かげ', 'いぬ', 'ねこ', 'さる', 'しか', 'とり', 'かめ',
];

export const level4Words = [
  'かみ', 'いし', 'たけ', 'はし', 'かど', 'いと', 'たま', 'きり', 'いけ', 'かげ',
  'つき', 'そら', 'たい', 'ふね', 'やま', 'かわ', 'うみ', 'はな', 'くも', 'ほし',
];

export const level5Words = [
  'いし', 'たけ', 'かど', 'いと', 'はし', 'かみ', 'たま', 'きり', 'いけ', 'かげ',
  'つき', 'そら', 'たい', 'ふね', 'やま', 'かわ', 'うみ', 'はな', 'くも', 'ほし',
];

// カタカナ変換用関数
const hiraToKana = (str: string) => str.replace(/[ぁ-ん]/g, s => ({'あ':'ア','い':'イ','う':'ウ','え':'エ','お':'オ','か':'カ','き':'キ','く':'ク','け':'ケ','こ':'コ','さ':'サ','し':'シ','す':'ス','せ':'セ','そ':'ソ','た':'タ','ち':'チ','つ':'ツ','て':'テ','と':'ト','な':'ナ','に':'ニ','ぬ':'ヌ','ね':'ネ','の':'ノ','は':'ハ','ひ':'ヒ','ふ':'フ','へ':'ヘ','ほ':'ホ','ま':'マ','み':'ミ','む':'ム','め':'メ','も':'モ','や':'ヤ','ゆ':'ユ','よ':'ヨ','ら':'ラ','り':'リ','る':'ル','れ':'レ','ろ':'ロ','わ':'ワ','を':'ヲ','ん':'ン','が':'ガ','ぎ':'ギ','ぐ':'グ','げ':'ゲ','ご':'ゴ','ざ':'ザ','じ':'ジ','ず':'ズ','ぜ':'ゼ','ぞ':'ゾ','だ':'ダ','ぢ':'ヂ','づ':'ヅ','で':'デ','ど':'ド','ば':'バ','び':'ビ','ぶ':'ブ','べ':'ベ','ぼ':'ボ','ぱ':'パ','ぴ':'ピ','ぷ':'プ','ぺ':'ペ','ぽ':'ポ','ぁ':'ァ','ぃ':'ィ','ぅ':'ゥ','ぇ':'ェ','ぉ':'ォ','ゃ':'ャ','ゅ':'ュ','ょ':'ョ','っ':'ッ','ゎ':'ヮ'}[s]||s));

// 難易度1: カタカナ単語リスト
export const katakanaLevel1Words = level1Words.map(hiraToKana);
// 難易度2: カタカナ単語リスト
export const katakanaLevel2Words = level2Words.map(hiraToKana);
// 難易度3: カタカナ単語リスト
export const katakanaLevel3Words = level3Words.map(hiraToKana);
// 難易度4: カタカナ単語リスト
export const katakanaLevel4Words = level4Words.map(hiraToKana);
// 難易度5: カタカナ単語リスト
export const katakanaLevel5Words = level5Words.map(hiraToKana); 